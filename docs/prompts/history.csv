Class,Topic,Historical Example(s)
2,Course Overview and Introduction,"File Processing Systems (1940s-1960s): Discuss how data was managed before DBMSs, where each application had its own set of data files, leading to data redundancy and inconsistencyâ€”the core problems that databases were created to solve."
,,"Early Data Storage: Mention the use of punched cards (e.g., for the 1890 US Census) and later magnetic tape and magnetic disks as the physical precursors to modern database storage."
3,Introduction to Designing Databases,"E.F. Codd's 1970 Paper: Introduce Edgar F. Codd's seminal paper, ""A Relational Model of Data for Large Shared Data Banks."" This proposal fundamentally changed how data was logically structured and stored, separating the logical organization from physical storage."
,,"Peter Chen and the ER Model (1976): Mention the creation of the Entity-Relationship Model (ERM) by Peter Chen in 1976. This model provided the first widely accepted graphical tool for conceptual database design, which is the foundation of your design lesson."
4,Database Architecture,"Pre-Relational Models (1960s): Discuss the Hierarchical Model (e.g., IBM's IMS) and the Network Model (CODASYL). These were the dominant architectures before the relational model, which enforced both schema and fixed access paths, making changes difficult."
,,"The Three-Schema Architecture (1970s): Briefly introduce the concept of the three-schema architecture (External, Conceptual, Internal), a foundational concept developed to achieve data independence, a key architectural goal for modern DBMS."
5,The Relational Model,"IBM's System R (1970s): Mention that IBM researchers, including Don Chamberlin and Raymond Boyce, built System R, an experimental prototype that demonstrated the feasibility of Codd's relational model and led to the development of SQL."
,,"The ""Relational Wars"" (Early 1980s): Discuss the initial resistance from companies invested in older systems and how Oracle (founded 1977, shipping Version 2 in 1979) was one of the first to commercially embrace and succeed with the relational model."
6,Relational Algebra,"Codd's Formal Foundation: Emphasize that Relational Algebra and Relational Calculus (the topic of the next class) were introduced in Codd's early papers (1970, 1972) to provide a formal, mathematical basis for manipulating data, which is essential for proving a query language's power and optimizing queries."
7,Relational Calculus,"Theoretical Completeness: Explain that Codd used Relational Calculus to define Relational Completeness, which is a measure of the expressive power of a query language. He proved that a language capable of expressing all operations in the calculus is ""relationally complete."""
8,Introduction to SQL,"SEQUEL to SQL: Introduce SEQUEL (Structured English Query Language), the language developed for System R. Due to a trademark issue, it was renamed SQL (Structured Query Language). SQL was a deliberate attempt to be more user-friendly than relational calculus while retaining its power."
,,"Early Standardization (1986/1987): Highlight that SQL's importance led to its standardization by ANSI in 1986 and ISO in 1987, cementing its status as the ""intergalactic standard"" for relational databases."
9,SQL,"Early Commercial Successes: Discuss the rise of early commercial SQL databases like Oracle, Sybase, Informix, and IBM DB2 in the early 1980s, which solidified SQL's dominance in the market."
10,Advanced SQL,"SQL Standard Evolution: Mention the various revisions of the SQL standard (e.g., SQL-92, SQL:1999, SQL:2003). Advanced SQL features like recursive queries, window functions, and object-relational features were added over decades to adapt to evolving application needs."
11,Data Definitions,DDL in CODASYL (Late 1960s): Note that the concept of a Data Definition Language (DDL) was first formally introduced in the CODASYL Network Model specifications to define the schema (the structure) of the database.
,,"SQL's DDL Integration: Contrast the early separate DDL with how SQL integrated DDL commands (CREATE, ALTER, DROP) into the same language as data manipulation, which was a practical design choice for database administrators."
13,Views & Document Databases,"Views for Security and Simplicity: Views have been a feature of RDBMS since their early days (e.g., in System R) as a crucial mechanism for security (restricting users to a subset of data) and simplicity (hiding complex joins)."
,,"The NoSQL Movement (Mid-2000s): Introduce the NoSQL movement, which emerged in the mid-2000s primarily to address the scalability and availability challenges faced by massive web applications (like Google and Amazon) using traditional relational databases."
14,MongoDB,"10gen to MongoDB (2007-2009): Share the origin story of MongoDB. It was initially developed by the company 10gen as a component for an internal platform-as-a-service (PaaS) product. They later pivoted to focus solely on the database, releasing the first version in 2009."
,,"Document Model Design: Explain that the JSON-like Document Model (like MongoDB's BSON) was an intentional move away from the rigid structure of the relational model, catering to the needs of modern, rapidly changing internet applications."
15,MERN Stack,"Rise of JavaScript Everywhere: Discuss the mid-2000s and 2010s trend of ""JavaScript Everywhere,"" fueled by Node.js (released 2009). The MERN stack (MongoDB, Express.js, React, Node.js) represents the culmination of this trend, allowing developers to use a single language (JavaScript) for the entire application stack."
16,Portfolio Item Presentations,Evolution of Application Development: Provide a closing historical thought by summarizing the transition from the mainframe/client-server era (dominated by relational databases) to the web-scale/cloud era (which spurred NoSQL and the full-stack frameworks like MERN) to emphasize that database technology is constantly evolving to meet new computing platforms and application demands.